Client-side GraphQL with React & Apollo
https://www.apollographql.com/tutorials/client-side-graphql-react/01-feature-overview-and-setup

https://github.com/apollographql-education/odyssey-client-side-graphql
https://github.com/Annie-Huang/odyssey-client-side-graphql

Sandbox: https://studio.apollographql.com/sandbox/explorer
---------------------------------------------------------------------------

Initial set up is copy from main branch in https://github.com/apollographql-education/odyssey-client-side-graphql

PS C:\react\odyssey-client-side-graphql> npm install
PS C:\react\odyssey-client-side-graphql> npm start
http://localhost:3000/

https://studio.apollographql.com/sandbox/schema/reference
https://studio.apollographql.com/sandbox/explorer
The endpoint to our GraphQL API: https://odyssey-lift-off-server.herokuapp.com/


PS C:\react\odyssey-client-side-graphql> npm install graphql @apollo/client
PS C:\react\odyssey-client-side-graphql> npm install -D @graphql-codegen/cli @graphql-codegen/client-preset

PS C:\react\odyssey-client-side-graphql> npm run generate
Create "GET_TRACKS" query in tracks.tsx.
Then run this again:
PS C:\react\odyssey-client-side-graphql> npm run generate
PS C:\react\odyssey-client-side-graphql> prettier . --write





Create "GET_TRACK" query in track.tsx
Then run this again:
PS C:\react\odyssey-client-side-graphql> npm run generate
http://localhost:3000/track/c_0
http://localhost:3000/track/c_1
http://localhost:3000/track/c_2
Confirm in home page, each individual card can get into individual <Track> page as well.


Create "INCREMENT_TRACK_VIEWS" mutation in track-card.tsx
Then run this again:
PS C:\react\odyssey-client-side-graphql> npm run generate
